#ifndef __AXIS_TRANSLATION_H__
#define __AXIS_TRANSLATION_H__

//=============================================================================
//
// Tables for axes translation between aircraft axes and earth axes
//
//=============================================================================

/*-----------------------------------------------------------------------------
  CaspiQuad 1
  Copyright (c) 2009 Dror Caspi.  All rights reserved.

  Based on AeroQuad (http://www.AeroQuad.info)
  Copyright (c) 2009 Ted Carancho.  All rights reserved.
 
  This program is free software: you can redistribute it and/or modify 
  it under the terms of the GNU General Public License as published by 
  the Free Software Foundation, either version 3 of the License, or 
  (at your option) any later version. 

  This program is distributed in the hope that it will be useful, 
  but WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
  GNU General Public License for more details. 

  You should have received a copy of the GNU General Public License 
  along with this program. If not, see <http://www.gnu.org/licenses/>. 
-----------------------------------------------------------------------------*/

//=============================================================================
//
// The data below is taken from the Excel file axis_translation.xls
//
//=============================================================================

// Size of the two-dimensional tables

#define COEFF_TABLE_SPAN          32

// Number of bits to shift the rotation angle (represented as 15-bit unsigned) to
// get coefficient table row or column number (5 bits)

#define COEFF_TABLE_ANGLE_SHIFT    8

// Maximum angle that has a representation in the table

#define COEFF_TABLE_MAX_ANGLE   ((COEFF_TABLE_SPAN - 1) << COEFF_TABLE_ANGLE_SHIFT)

// Representaion of 1.0 in the tables

#define COEFF_TABLE_FACTOR_SHIFT   8
#define COEFF_TABLE_FACTOR       256

// Measured Z acceleration coefficient table, stored in program memory (since it is constant and too large
// for the AVR's tiny RAM

static const uint8_t z_acc_z_coeff_table[COEFF_TABLE_SPAN][COEFF_TABLE_SPAN] PROGMEM =
{
  {256, 256, 256, 255, 255, 254, 253, 252, 251, 250, 248, 247, 245, 243, 241, 239, 237, 234, 231, 229, 226, 223, 220, 216, 213, 209, 206, 202, 198, 194, 190, 185},
  {256, 256, 256, 255, 255, 254, 253, 252, 251, 250, 248, 247, 245, 243, 241, 239, 236, 234, 231, 229, 226, 223, 220, 216, 213, 209, 206, 202, 198, 194, 190, 185},
  {256, 256, 255, 255, 254, 254, 253, 252, 251, 249, 248, 246, 245, 243, 241, 239, 236, 234, 231, 228, 226, 222, 219, 216, 213, 209, 205, 202, 198, 194, 189, 185},
  {255, 255, 255, 255, 254, 253, 253, 252, 250, 249, 248, 246, 244, 242, 240, 238, 236, 233, 231, 228, 225, 222, 219, 216, 212, 209, 205, 201, 197, 193, 189, 185},
  {255, 255, 254, 254, 254, 253, 252, 251, 250, 249, 247, 246, 244, 242, 240, 238, 235, 233, 230, 228, 225, 222, 219, 215, 212, 208, 205, 201, 197, 193, 189, 185},
  {254, 254, 254, 253, 253, 252, 251, 250, 249, 248, 246, 245, 243, 241, 239, 237, 235, 232, 230, 227, 224, 221, 218, 215, 211, 208, 204, 200, 196, 192, 188, 184},
  {253, 253, 253, 253, 252, 251, 250, 250, 248, 247, 246, 244, 242, 240, 238, 236, 234, 232, 229, 226, 223, 220, 217, 214, 211, 207, 203, 200, 196, 192, 188, 184},
  {252, 252, 252, 252, 251, 250, 250, 249, 247, 246, 245, 243, 241, 240, 238, 235, 233, 231, 228, 225, 222, 220, 216, 213, 210, 206, 203, 199, 195, 191, 187, 183},
  {251, 251, 251, 250, 250, 249, 248, 247, 246, 245, 244, 242, 240, 238, 236, 234, 232, 230, 227, 224, 222, 219, 215, 212, 209, 205, 202, 198, 194, 190, 186, 182},
  {250, 250, 249, 249, 249, 248, 247, 246, 245, 244, 242, 241, 239, 237, 235, 233, 231, 228, 226, 223, 220, 217, 214, 211, 208, 204, 201, 197, 193, 189, 185, 181},
  {248, 248, 248, 248, 247, 246, 246, 245, 244, 242, 241, 239, 238, 236, 234, 232, 229, 227, 225, 222, 219, 216, 213, 210, 207, 203, 200, 196, 192, 188, 184, 180},
  {247, 247, 246, 246, 246, 245, 244, 243, 242, 241, 239, 238, 236, 234, 232, 230, 228, 226, 223, 221, 218, 215, 212, 209, 205, 202, 198, 195, 191, 187, 183, 179},
  {245, 245, 245, 244, 244, 243, 242, 241, 240, 239, 238, 236, 234, 233, 231, 229, 226, 224, 222, 219, 216, 213, 210, 207, 204, 201, 197, 194, 190, 186, 182, 178},
  {243, 243, 243, 242, 242, 241, 240, 240, 238, 237, 236, 234, 233, 231, 229, 227, 225, 222, 220, 217, 215, 212, 209, 206, 202, 199, 196, 192, 188, 185, 181, 177},
  {241, 241, 241, 240, 240, 239, 238, 238, 236, 235, 234, 232, 231, 229, 227, 225, 223, 221, 218, 216, 213, 210, 207, 204, 201, 198, 194, 191, 187, 183, 179, 175},
  {239, 239, 239, 238, 238, 237, 236, 235, 234, 233, 232, 230, 229, 227, 225, 223, 221, 219, 216, 214, 211, 208, 205, 202, 199, 196, 192, 189, 185, 182, 178, 174},
  {237, 236, 236, 236, 235, 235, 234, 233, 232, 231, 229, 228, 226, 225, 223, 221, 219, 216, 214, 212, 209, 206, 203, 200, 197, 194, 191, 187, 184, 180, 176, 172},
  {234, 234, 234, 233, 233, 232, 232, 231, 230, 228, 227, 226, 224, 222, 221, 219, 216, 214, 212, 209, 207, 204, 201, 198, 195, 192, 189, 185, 182, 178, 175, 171},
  {231, 231, 231, 231, 230, 230, 229, 228, 227, 226, 225, 223, 222, 220, 218, 216, 214, 212, 210, 207, 205, 202, 199, 196, 193, 190, 187, 184, 180, 177, 173, 169},
  {229, 229, 228, 228, 228, 227, 226, 225, 224, 223, 222, 221, 219, 217, 216, 214, 212, 209, 207, 205, 202, 200, 197, 194, 191, 188, 185, 181, 178, 175, 171, 167},
  {226, 226, 226, 225, 225, 224, 223, 222, 222, 220, 219, 218, 216, 215, 213, 211, 209, 207, 205, 202, 200, 197, 194, 192, 189, 186, 183, 179, 176, 173, 169, 165},
  {223, 223, 222, 222, 222, 221, 220, 220, 219, 217, 216, 215, 213, 212, 210, 208, 206, 204, 202, 200, 197, 195, 192, 189, 186, 183, 180, 177, 174, 170, 167, 163},
  {220, 220, 219, 219, 219, 218, 217, 216, 215, 214, 213, 212, 210, 209, 207, 205, 203, 201, 199, 197, 194, 192, 189, 187, 184, 181, 178, 175, 172, 168, 165, 161},
  {216, 216, 216, 216, 215, 215, 214, 213, 212, 211, 210, 209, 207, 206, 204, 202, 200, 198, 196, 194, 192, 189, 187, 184, 181, 178, 175, 172, 169, 166, 163, 159},
  {213, 213, 213, 212, 212, 211, 211, 210, 209, 208, 207, 205, 204, 202, 201, 199, 197, 195, 193, 191, 189, 186, 184, 181, 179, 176, 173, 170, 167, 164, 160, 157},
  {209, 209, 209, 209, 208, 208, 207, 206, 205, 204, 203, 202, 201, 199, 198, 196, 194, 192, 190, 188, 186, 183, 181, 178, 176, 173, 170, 167, 164, 161, 158, 155},
  {206, 206, 205, 205, 205, 204, 203, 203, 202, 201, 200, 198, 197, 196, 194, 192, 191, 189, 187, 185, 183, 180, 178, 175, 173, 170, 167, 165, 162, 159, 156, 152},
  {202, 202, 202, 201, 201, 200, 200, 199, 198, 197, 196, 195, 194, 192, 191, 189, 187, 185, 184, 181, 179, 177, 175, 172, 170, 167, 165, 162, 159, 156, 153, 150},
  {198, 198, 198, 197, 197, 196, 196, 195, 194, 193, 192, 191, 190, 188, 187, 185, 184, 182, 180, 178, 176, 174, 172, 169, 167, 164, 162, 159, 156, 153, 150, 147},
  {194, 194, 194, 193, 193, 192, 192, 191, 190, 189, 188, 187, 186, 185, 183, 182, 180, 178, 177, 175, 173, 170, 168, 166, 164, 161, 159, 156, 153, 151, 148, 145},
  {190, 190, 189, 189, 189, 188, 188, 187, 186, 185, 184, 183, 182, 181, 179, 178, 176, 175, 173, 171, 169, 167, 165, 163, 160, 158, 156, 153, 150, 148, 145, 142},
  {185, 185, 185, 185, 185, 184, 184, 183, 182, 181, 180, 179, 178, 177, 175, 174, 172, 171, 169, 167, 165, 163, 161, 159, 157, 155, 152, 150, 147, 145, 142, 139}
};

// Measured X and Y acceleration coefficient table, stored in program memory (since it is constant and too large
// for the AVR's tiny RAM

static const uint8_t z_acc_xy_coeff_table[COEFF_TABLE_SPAN][COEFF_TABLE_SPAN] PROGMEM =
{
  {0, 6, 13, 19, 25, 31, 38, 44, 50, 56, 62, 68, 74, 80, 86, 92, 98, 104, 109, 115, 121, 126, 132, 137, 142, 147, 152, 157, 162, 167, 172, 177},
  {0, 6, 13, 19, 25, 31, 38, 44, 50, 56, 62, 68, 74, 80, 86, 92, 98, 104, 109, 115, 121, 126, 132, 137, 142, 147, 152, 157, 162, 167, 172, 176},
  {0, 6, 13, 19, 25, 31, 38, 44, 50, 56, 62, 68, 74, 80, 86, 92, 98, 104, 109, 115, 121, 126, 131, 137, 142, 147, 152, 157, 162, 167, 172, 176},
  {0, 6, 13, 19, 25, 31, 37, 44, 50, 56, 62, 68, 74, 80, 86, 92, 98, 103, 109, 115, 120, 126, 131, 137, 142, 147, 152, 157, 162, 167, 171, 176},
  {0, 6, 13, 19, 25, 31, 37, 44, 50, 56, 62, 68, 74, 80, 86, 92, 97, 103, 109, 115, 120, 126, 131, 136, 142, 147, 152, 157, 162, 166, 171, 176},
  {0, 6, 12, 19, 25, 31, 37, 43, 50, 56, 62, 68, 74, 80, 86, 91, 97, 103, 109, 114, 120, 125, 131, 136, 141, 146, 151, 156, 161, 166, 171, 175},
  {0, 6, 12, 19, 25, 31, 37, 43, 49, 55, 62, 68, 74, 79, 85, 91, 97, 103, 108, 114, 119, 125, 130, 136, 141, 146, 151, 156, 161, 166, 170, 175},
  {0, 6, 12, 19, 25, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 102, 108, 113, 119, 124, 130, 135, 140, 145, 150, 155, 160, 165, 170, 174},
  {0, 6, 12, 18, 25, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 90, 96, 102, 107, 113, 118, 124, 129, 134, 140, 145, 150, 155, 159, 164, 169, 173},
  {0, 6, 12, 18, 24, 31, 37, 43, 49, 55, 61, 67, 73, 78, 84, 90, 96, 101, 107, 112, 118, 123, 128, 134, 139, 144, 149, 154, 159, 163, 168, 173},
  {0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 89, 95, 101, 106, 112, 117, 122, 128, 133, 138, 143, 148, 153, 158, 163, 167, 172},
  {0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 77, 83, 89, 94, 100, 106, 111, 116, 122, 127, 132, 137, 142, 147, 152, 157, 162, 166, 171},
  {0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 65, 71, 77, 83, 88, 94, 99, 105, 110, 116, 121, 126, 131, 136, 141, 146, 151, 156, 160, 165, 170},
  {0, 6, 12, 18, 24, 30, 36, 42, 47, 53, 59, 65, 71, 76, 82, 88, 93, 99, 104, 109, 115, 120, 125, 130, 135, 140, 145, 150, 155, 159, 164, 168},
  {0, 6, 12, 18, 24, 30, 35, 41, 47, 53, 59, 64, 70, 76, 81, 87, 92, 98, 103, 108, 114, 119, 124, 129, 134, 139, 144, 149, 153, 158, 163, 167},
  {0, 6, 12, 18, 23, 29, 35, 41, 47, 52, 58, 64, 69, 75, 81, 86, 91, 97, 102, 108, 113, 118, 123, 128, 133, 138, 143, 147, 152, 157, 161, 166},
  {0, 6, 12, 17, 23, 29, 35, 40, 46, 52, 57, 63, 69, 74, 80, 85, 91, 96, 101, 106, 112, 117, 122, 127, 132, 137, 141, 146, 151, 155, 160, 164},
  {0, 6, 11, 17, 23, 29, 34, 40, 46, 51, 57, 62, 68, 73, 79, 84, 90, 95, 100, 105, 111, 116, 121, 126, 130, 135, 140, 145, 149, 154, 158, 163},
  {0, 6, 11, 17, 23, 28, 34, 40, 45, 51, 56, 62, 67, 73, 78, 83, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 139, 143, 148, 152, 157, 161},
  {0, 6, 11, 17, 22, 28, 34, 39, 45, 50, 56, 61, 66, 72, 77, 82, 88, 93, 98, 103, 108, 113, 118, 123, 128, 132, 137, 142, 146, 151, 155, 159},
  {0, 6, 11, 17, 22, 28, 33, 39, 44, 49, 55, 60, 66, 71, 76, 81, 87, 92, 97, 102, 107, 112, 117, 121, 126, 131, 135, 140, 144, 149, 153, 158},
  {0, 5, 11, 16, 22, 27, 33, 38, 43, 49, 54, 59, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 129, 134, 138, 143, 147, 151, 156},
  {0, 5, 11, 16, 22, 27, 32, 38, 43, 48, 53, 59, 64, 69, 74, 79, 84, 89, 94, 99, 104, 109, 113, 118, 123, 127, 132, 136, 141, 145, 149, 154},
  {0, 5, 11, 16, 21, 26, 32, 37, 42, 47, 53, 58, 63, 68, 73, 78, 83, 88, 93, 98, 102, 107, 112, 117, 121, 126, 130, 135, 139, 143, 147, 152},
  {0, 5, 10, 16, 21, 26, 31, 36, 42, 47, 52, 57, 62, 67, 72, 77, 82, 87, 91, 96, 101, 106, 110, 115, 119, 124, 128, 133, 137, 141, 145, 150},
  {0, 5, 10, 15, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 80, 85, 90, 95, 99, 104, 108, 113, 117, 122, 126, 131, 135, 139, 143, 147},
  {0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 69, 74, 79, 84, 88, 93, 98, 102, 107, 111, 116, 120, 124, 128, 133, 137, 141, 145},
  {0, 5, 10, 15, 20, 25, 30, 35, 39, 44, 49, 54, 59, 63, 68, 73, 78, 82, 87, 91, 96, 100, 105, 109, 114, 118, 122, 126, 130, 135, 139, 143},
  {0, 5, 10, 15, 19, 24, 29, 34, 39, 43, 48, 53, 58, 62, 67, 72, 76, 81, 85, 90, 94, 98, 103, 107, 111, 116, 120, 124, 128, 132, 136, 140},
  {0, 5, 10, 14, 19, 24, 28, 33, 38, 43, 47, 52, 56, 61, 66, 70, 75, 79, 83, 88, 92, 97, 101, 105, 109, 114, 118, 122, 126, 130, 134, 138},
  {0, 5, 9, 14, 19, 23, 28, 32, 37, 42, 46, 51, 55, 60, 64, 69, 73, 77, 82, 86, 90, 95, 99, 103, 107, 111, 115, 119, 123, 127, 131, 135},
  {0, 5, 9, 14, 18, 23, 27, 32, 36, 41, 45, 50, 54, 58, 63, 67, 71, 76, 80, 84, 88, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133}
};

#endif

