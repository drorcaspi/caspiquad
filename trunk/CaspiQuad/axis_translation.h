#ifndef __AXIS_TRANSLATION_H__
#define __AXIS_TRANSLATION_H__

//=============================================================================
//
// Tables for axes translation between aircraft axes and earth axes
//
//=============================================================================

/*-----------------------------------------------------------------------------
  CaspiQuad 1
  Copyright (c) 2009 Dror Caspi.  All rights reserved.

  Based on AeroQuad (http://www.AeroQuad.info)
  Copyright (c) 2009 Ted Carancho.  All rights reserved.
 
  This program is free software: you can redistribute it and/or modify 
  it under the terms of the GNU General Public License as published by 
  the Free Software Foundation, either version 3 of the License, or 
  (at your option) any later version. 

  This program is distributed in the hope that it will be useful, 
  but WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
  GNU General Public License for more details. 

  You should have received a copy of the GNU General Public License 
  along with this program. If not, see <http://www.gnu.org/licenses/>. 
-----------------------------------------------------------------------------*/

//=============================================================================
//
// The data below is taken from the Excel file axis_translation.xls
//
//=============================================================================

// Size of the two-dimensional tables

#define COEFF_TABLE_SPAN          32

// Number of bits to shift the rotation angle (represented as 15-bit unsigned) to
// get coefficient table row or column number (5 bits)

#define COEFF_TABLE_ANGLE_SHIFT    8

// Maximum angle that has a representation in the table

#define COEFF_TABLE_MAX_ANGLE   ((COEFF_TABLE_SPAN - 1) << COEFF_TABLE_ANGLE_SHIFT)

// Representaion of 1.0 in the tables

#define COEFF_TABLE_FACTOR_SHIFT   8
#define COEFF_TABLE_FACTOR       256

// Measured Z acceleration coefficient table, stored in program memory (since it is constant and too large
// for the AVR's tiny RAM

static const uint8_t z_acc_z_coeff_table[COEFF_TABLE_SPAN][COEFF_TABLE_SPAN] PROGMEM =
{
  {128, 128, 128, 128, 127, 127, 127, 126, 126, 125, 124, 123, 122, 122, 121, 119, 118, 117, 116, 114, 113, 111, 110, 108, 106, 105, 103, 101, 99,  97,  95,  93},
  {128, 128, 128, 128, 127, 127, 127, 126, 126, 125, 124, 123, 122, 122, 120, 119, 118, 117, 116, 114, 113, 111, 110, 108, 106, 105, 103, 101, 99,  97,  95,  93},
  {128, 128, 128, 127, 127, 127, 126, 126, 125, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 114, 113, 111, 110, 108, 106, 105, 103, 101, 99,  97,  95,  93},
  {128, 128, 127, 127, 127, 127, 126, 126, 125, 125, 124, 123, 122, 121, 120, 119, 118, 117, 115, 114, 113, 111, 109, 108, 106, 104, 103, 101, 99,  97,  95,  92},
  {127, 127, 127, 127, 127, 126, 126, 126, 125, 124, 124, 123, 122, 121, 120, 119, 118, 116, 115, 114, 112, 111, 109, 108, 106, 104, 102, 100, 98,  96,  94,  92},
  {127, 127, 127, 127, 126, 126, 126, 125, 125, 124, 123, 122, 122, 121, 120, 119, 117, 116, 115, 113, 112, 111, 109, 107, 106, 104, 102, 100, 98,  96,  94,  92},
  {127, 127, 126, 126, 126, 126, 125, 125, 124, 124, 123, 122, 121, 120, 119, 118, 117, 116, 114, 113, 112, 110, 109, 107, 105, 104, 102, 100, 98,  96,  94,  92},
  {126, 126, 126, 126, 126, 125, 125, 124, 124, 123, 122, 122, 121, 120, 119, 118, 117, 115, 114, 113, 111, 110, 108, 107, 105, 103, 101, 99,  98,  96,  94,  91},
  {126, 126, 125, 125, 125, 125, 124, 124, 123, 122, 122, 121, 120, 119, 118, 117, 116, 115, 114, 112, 111, 109, 108, 106, 104, 103, 101, 99,  97,  95,  93,  91},
  {125, 125, 125, 125, 124, 124, 124, 123, 122, 122, 121, 120, 120, 119, 118, 117, 115, 114, 113, 112, 110, 109, 107, 106, 104, 102, 100, 99,  97,  95,  93,  91},
  {124, 124, 124, 124, 124, 123, 123, 122, 122, 121, 120, 120, 119, 118, 117, 116, 115, 114, 112, 111, 110, 108, 107, 105, 103, 102, 100, 98,  96,  94,  92,  90},
  {123, 123, 123, 123, 123, 122, 122, 122, 121, 120, 120, 119, 118, 117, 116, 115, 114, 113, 112, 110, 109, 107, 106, 104, 103, 101, 99,  97,  96,  94,  92,  90},
  {122, 122, 122, 122, 122, 122, 121, 121, 120, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 109, 108, 107, 105, 104, 102, 100, 99,  97,  95,  93,  91,  89},
  {122, 122, 121, 121, 121, 121, 120, 120, 119, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 107, 106, 104, 103, 101, 100, 98,  96,  94,  92,  90,  88},
  {121, 120, 120, 120, 120, 120, 119, 119, 118, 118, 117, 116, 115, 114, 114, 112, 111, 110, 109, 108, 106, 105, 104, 102, 100, 99,  97,  95,  93,  92,  90,  88},
  {119, 119, 119, 119, 119, 119, 118, 118, 117, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 105, 104, 103, 101, 100, 98,  96,  95,  93,  91,  89,  87},
  {118, 118, 118, 118, 118, 117, 117, 117, 116, 115, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 104, 103, 102, 100, 99,  97,  95,  94,  92,  90,  88,  86},
  {117, 117, 117, 117, 116, 116, 116, 115, 115, 114, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 103, 102, 101, 99,  98,  96,  94,  93,  91,  89,  87,  85},
  {116, 116, 116, 115, 115, 115, 114, 114, 114, 113, 112, 112, 111, 110, 109, 108, 107, 106, 105, 104, 102, 101, 100, 98,  97,  95,  93,  92,  90,  88,  86,  85},
  {114, 114, 114, 114, 114, 113, 113, 113, 112, 112, 111, 110, 109, 109, 108, 107, 106, 105, 104, 102, 101, 100, 98,  97,  96,  94,  92,  91,  89,  87,  86,  84},
  {113, 113, 113, 113, 112, 112, 112, 111, 111, 110, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99,  97,  96,  94,  93,  91,  90,  88,  86,  85,  83},
  {111, 111, 111, 111, 111, 111, 110, 110, 109, 109, 108, 107, 107, 106, 105, 104, 103, 102, 101, 100, 99,  97,  96,  95,  93,  92,  90,  89,  87,  85,  84,  82},
  {110, 110, 110, 109, 109, 109, 109, 108, 108, 107, 107, 106, 105, 104, 104, 103, 102, 101, 100, 98,  97,  96,  95,  93,  92,  90,  89,  87,  86,  84,  82,  81},
  {108, 108, 108, 108, 108, 107, 107, 107, 106, 106, 105, 104, 104, 103, 102, 101, 100, 99,  98,  97,  96,  95,  93,  92,  91,  89,  88,  86,  85,  83,  81,  80},
  {106, 106, 106, 106, 106, 106, 105, 105, 104, 104, 103, 103, 102, 101, 100, 100, 99,  98,  97,  96,  94,  93,  92,  91,  89,  88,  86,  85,  83,  82,  80,  79},
  {105, 105, 105, 104, 104, 104, 104, 103, 103, 102, 102, 101, 100, 100, 99,  98,  97,  96,  95,  94,  93,  92,  90,  89,  88,  87,  85,  84,  82,  81,  79,  77},
  {103, 103, 103, 103, 102, 102, 102, 101, 101, 100, 100, 99,  99,  98,  97,  96,  95,  94,  93,  92,  91,  90,  89,  88,  86,  85,  84,  82,  81,  79,  78,  76},
  {101, 101, 101, 101, 100, 100, 100, 99,  99,  99,  98,  97,  97,  96,  95,  95,  94,  93,  92,  91,  90,  89,  87,  86,  85,  84,  82,  81,  79,  78,  77,  75},
  {99,  99,  99,  99,  98,  98,  98,  98,  97,  97,  96,  96,  95,  94,  93,  93,  92,  91,  90,  89,  88,  87,  86,  85,  83,  82,  81,  79,  78,  77,  75,  74},
  {97,  97,  97,  97,  96,  96,  96,  96,  95,  95,  94,  94,  93,  92,  92,  91,  90,  89,  88,  87,  86,  85,  84,  83,  82,  81,  79,  78,  77,  75,  74,  72},
  {95,  95,  95,  95,  94,  94,  94,  94,  93,  93,  92,  92,  91,  90,  90,  89,  88,  87,  86,  86,  85,  84,  82,  81,  80,  79,  78,  77,  75,  74,  72,  71},
  {93,  93,  93,  92,  92,  92,  92,  91,  91,  91,  90,  90,  89,  88,  88,  87,  86,  85,  85,  84,  83,  82,  81,  80,  79,  77,  76,  75,  74,  72,  71,  70},
};

// Measured X and Y acceleration coefficient table, stored in program memory (since it is constant and too large
// for the AVR's tiny RAM

static const uint8_t z_acc_xy_coeff_table[COEFF_TABLE_SPAN][COEFF_TABLE_SPAN] PROGMEM =
{
  {0, 6, 13, 19, 25, 31, 38, 44, 50, 56, 62, 68, 74, 80, 86, 92, 98, 104, 109, 115, 121, 126, 132, 137, 142, 147, 152, 157, 162, 167, 172, 177},
  {0, 6, 13, 19, 25, 31, 38, 44, 50, 56, 62, 68, 74, 80, 86, 92, 98, 104, 109, 115, 121, 126, 132, 137, 142, 147, 152, 157, 162, 167, 172, 176},
  {0, 6, 13, 19, 25, 31, 38, 44, 50, 56, 62, 68, 74, 80, 86, 92, 98, 104, 109, 115, 121, 126, 131, 137, 142, 147, 152, 157, 162, 167, 172, 176},
  {0, 6, 13, 19, 25, 31, 37, 44, 50, 56, 62, 68, 74, 80, 86, 92, 98, 103, 109, 115, 120, 126, 131, 137, 142, 147, 152, 157, 162, 167, 171, 176},
  {0, 6, 13, 19, 25, 31, 37, 44, 50, 56, 62, 68, 74, 80, 86, 92, 97, 103, 109, 115, 120, 126, 131, 136, 142, 147, 152, 157, 162, 166, 171, 176},
  {0, 6, 12, 19, 25, 31, 37, 43, 50, 56, 62, 68, 74, 80, 86, 91, 97, 103, 109, 114, 120, 125, 131, 136, 141, 146, 151, 156, 161, 166, 171, 175},
  {0, 6, 12, 19, 25, 31, 37, 43, 49, 55, 62, 68, 74, 79, 85, 91, 97, 103, 108, 114, 119, 125, 130, 136, 141, 146, 151, 156, 161, 166, 170, 175},
  {0, 6, 12, 19, 25, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 102, 108, 113, 119, 124, 130, 135, 140, 145, 150, 155, 160, 165, 170, 174},
  {0, 6, 12, 18, 25, 31, 37, 43, 49, 55, 61, 67, 73, 79, 85, 90, 96, 102, 107, 113, 118, 124, 129, 134, 140, 145, 150, 155, 159, 164, 169, 173},
  {0, 6, 12, 18, 24, 31, 37, 43, 49, 55, 61, 67, 73, 78, 84, 90, 96, 101, 107, 112, 118, 123, 128, 134, 139, 144, 149, 154, 159, 163, 168, 173},
  {0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 89, 95, 101, 106, 112, 117, 122, 128, 133, 138, 143, 148, 153, 158, 163, 167, 172},
  {0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 77, 83, 89, 94, 100, 106, 111, 116, 122, 127, 132, 137, 142, 147, 152, 157, 162, 166, 171},
  {0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 65, 71, 77, 83, 88, 94, 99, 105, 110, 116, 121, 126, 131, 136, 141, 146, 151, 156, 160, 165, 170},
  {0, 6, 12, 18, 24, 30, 36, 42, 47, 53, 59, 65, 71, 76, 82, 88, 93, 99, 104, 109, 115, 120, 125, 130, 135, 140, 145, 150, 155, 159, 164, 168},
  {0, 6, 12, 18, 24, 30, 35, 41, 47, 53, 59, 64, 70, 76, 81, 87, 92, 98, 103, 108, 114, 119, 124, 129, 134, 139, 144, 149, 153, 158, 163, 167},
  {0, 6, 12, 18, 23, 29, 35, 41, 47, 52, 58, 64, 69, 75, 81, 86, 91, 97, 102, 108, 113, 118, 123, 128, 133, 138, 143, 147, 152, 157, 161, 166},
  {0, 6, 12, 17, 23, 29, 35, 40, 46, 52, 57, 63, 69, 74, 80, 85, 91, 96, 101, 106, 112, 117, 122, 127, 132, 137, 141, 146, 151, 155, 160, 164},
  {0, 6, 11, 17, 23, 29, 34, 40, 46, 51, 57, 62, 68, 73, 79, 84, 90, 95, 100, 105, 111, 116, 121, 126, 130, 135, 140, 145, 149, 154, 158, 163},
  {0, 6, 11, 17, 23, 28, 34, 40, 45, 51, 56, 62, 67, 73, 78, 83, 89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 139, 143, 148, 152, 157, 161},
  {0, 6, 11, 17, 22, 28, 34, 39, 45, 50, 56, 61, 66, 72, 77, 82, 88, 93, 98, 103, 108, 113, 118, 123, 128, 132, 137, 142, 146, 151, 155, 159},
  {0, 6, 11, 17, 22, 28, 33, 39, 44, 49, 55, 60, 66, 71, 76, 81, 87, 92, 97, 102, 107, 112, 117, 121, 126, 131, 135, 140, 144, 149, 153, 158},
  {0, 5, 11, 16, 22, 27, 33, 38, 43, 49, 54, 59, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 129, 134, 138, 143, 147, 151, 156},
  {0, 5, 11, 16, 22, 27, 32, 38, 43, 48, 53, 59, 64, 69, 74, 79, 84, 89, 94, 99, 104, 109, 113, 118, 123, 127, 132, 136, 141, 145, 149, 154},
  {0, 5, 11, 16, 21, 26, 32, 37, 42, 47, 53, 58, 63, 68, 73, 78, 83, 88, 93, 98, 102, 107, 112, 117, 121, 126, 130, 135, 139, 143, 147, 152},
  {0, 5, 10, 16, 21, 26, 31, 36, 42, 47, 52, 57, 62, 67, 72, 77, 82, 87, 91, 96, 101, 106, 110, 115, 119, 124, 128, 133, 137, 141, 145, 150},
  {0, 5, 10, 15, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 80, 85, 90, 95, 99, 104, 108, 113, 117, 122, 126, 131, 135, 139, 143, 147},
  {0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 69, 74, 79, 84, 88, 93, 98, 102, 107, 111, 116, 120, 124, 128, 133, 137, 141, 145},
  {0, 5, 10, 15, 20, 25, 30, 35, 39, 44, 49, 54, 59, 63, 68, 73, 78, 82, 87, 91, 96, 100, 105, 109, 114, 118, 122, 126, 130, 135, 139, 143},
  {0, 5, 10, 15, 19, 24, 29, 34, 39, 43, 48, 53, 58, 62, 67, 72, 76, 81, 85, 90, 94, 98, 103, 107, 111, 116, 120, 124, 128, 132, 136, 140},
  {0, 5, 10, 14, 19, 24, 28, 33, 38, 43, 47, 52, 56, 61, 66, 70, 75, 79, 83, 88, 92, 97, 101, 105, 109, 114, 118, 122, 126, 130, 134, 138},
  {0, 5, 9, 14, 19, 23, 28, 32, 37, 42, 46, 51, 55, 60, 64, 69, 73, 77, 82, 86, 90, 95, 99, 103, 107, 111, 115, 119, 123, 127, 131, 135},
  {0, 5, 9, 14, 18, 23, 27, 32, 36, 41, 45, 50, 54, 58, 63, 67, 71, 76, 80, 84, 88, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133}
};

#endif

