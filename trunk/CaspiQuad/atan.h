#ifndef __ATAN_H__
#define __ATAN_H__

//=============================================================================
//
// Table for discrete atan() calculation
//
//=============================================================================

/*-----------------------------------------------------------------------------
  CaspiQuad 1
  Copyright (c) 2009 Dror Caspi.  All rights reserved.

  Based on AeroQuad (http://www.AeroQuad.info)
  Copyright (c) 2009 Ted Carancho.  All rights reserved.
 
  This program is free software: you can redistribute it and/or modify 
  it under the terms of the GNU General Public License as published by 
  the Free Software Foundation, either version 3 of the License, or 
  (at your option) any later version. 

  This program is distributed in the hope that it will be useful, 
  but WITHOUT ANY WARRANTY; without even the implied warranty of 
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
  GNU General Public License for more details. 

  You should have received a copy of the GNU General Public License 
  along with this program. If not, see <http://www.gnu.org/licenses/>. 
-----------------------------------------------------------------------------*/

//=============================================================================
//
// The data below is taken from the Excel file atan.xls
//
//=============================================================================

#define ATAN_COL_MIN      0
#define ATAN_COL_MAX     31
#define ATAN_COL_SPAN    (ATAN_COL_MAX - ATAN_COL_MIN + 1)

#define ATAN_ROW_MIN     43
#define ATAN_ROW_MAX     62
#define ATAN_ROW_SPAN    (ATAN_ROW_MAX - ATAN_ROW_MIN + 1)

// Arctan table, stored in program memory (since it is constant and too large
// for the AVR's tiny RAM

static const int16_t atan_table[ATAN_ROW_SPAN][ATAN_COL_SPAN] PROGMEM =
{
  {ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, 5310, 5493, 5672, 5848, 6020, 6189, 6354, 6515},
  {ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, 4836, 5024, 5208, 5389, 5567, 5741, 5911, 6078, 6242, 6402},
  {ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, 4362, 4554, 4743, 4928, 5110, 5289, 5465, 5637, 5806, 5971, 6133, 6292},
  {ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, 3692, 3890, 4086, 4278, 4467, 4653, 4836, 5016, 5192, 5366, 5536, 5703, 5867, 6028, 6185},
  {ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, 3020, 3222, 3422, 3620, 3815, 4007, 4196, 4383, 4566, 4747, 4924, 5099, 5270, 5439, 5604, 5766, 5926, 6082},
  {ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, 2142, 2350, 2555, 2759, 2960, 3159, 3356, 3550, 3742, 3931, 4118, 4302, 4483, 4661, 4836, 5008, 5178, 5344, 5508, 5669, 5826, 5981},
  {0, 213, 425, 638, 850, 1061, 1271, 1480, 1688, 1895, 2100, 2303, 2505, 2705, 2903, 3098, 3292, 3483, 3672, 3858, 4042, 4223, 4402, 4577, 4751, 4921, 5088, 5253, 5415, 5574, 5730, 5884},
  {0, 209, 417, 625, 833, 1040, 1246, 1451, 1655, 1858, 2059, 2259, 2457, 2653, 2848, 3040, 3230, 3418, 3604, 3788, 3969, 4147, 4323, 4497, 4668, 4836, 5002, 5164, 5325, 5482, 5637, 5789},
  {0, 204, 409, 613, 816, 1019, 1221, 1423, 1623, 1822, 2020, 2216, 2410, 2603, 2794, 2984, 3171, 3356, 3539, 3720, 3898, 4074, 4248, 4419, 4588, 4754, 4918, 5079, 5237, 5393, 5546, 5697},
  {0, 201, 401, 601, 801, 1000, 1198, 1396, 1592, 1788, 1982, 2174, 2366, 2555, 2743, 2929, 3113, 3296, 3476, 3654, 3830, 4003, 4175, 4344, 4510, 4674, 4836, 4995, 5152, 5306, 5458, 5607},
  {0, 197, 393, 590, 786, 981, 1176, 1370, 1563, 1754, 1945, 2134, 2322, 2509, 2694, 2877, 3058, 3237, 3415, 3590, 3764, 3935, 4104, 4271, 4435, 4597, 4757, 4914, 5069, 5222, 5372, 5520},
  {0, 193, 386, 579, 771, 963, 1154, 1345, 1534, 1723, 1910, 2096, 2281, 2464, 2646, 2826, 3005, 3181, 3356, 3529, 3700, 3869, 4035, 4200, 4362, 4522, 4680, 4836, 4989, 5140, 5289, ROT_NONE},
  {0, 190, 379, 568, 757, 946, 1133, 1320, 1507, 1692, 1876, 2059, 2241, 2421, 2600, 2777, 2953, 3127, 3299, 3469, 3638, 3804, 3969, 4131, 4292, 4450, 4606, 4760, 4912, ROT_NONE, ROT_NONE, ROT_NONE},
  {0, 186, 372, 558, 744, 929, 1113, 1297, 1480, 1662, 1843, 2023, 2202, 2379, 2555, 2730, 2903, 3074, 3244, 3412, 3578, 3742, 3904, 4065, 4223, 4380, 4534, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE},
  {0, 183, 366, 548, 731, 913, 1094, 1275, 1454, 1633, 1811, 1988, 2164, 2339, 2512, 2684, 2854, 3023, 3190, 3356, 3520, 3682, 3842, 4000, 4157, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE},
  {0, 180, 360, 539, 718, 897, 1075, 1253, 1430, 1606, 1781, 1955, 2128, 2300, 2470, 2640, 2808, 2974, 3139, 3302, 3464, 3623, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE},
  {0, 177, 353, 530, 706, 882, 1057, 1232, 1406, 1579, 1751, 1923, 2093, 2262, 2430, 2597, 2762, 2926, 3089, 3250, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE},
  {0, 174, 348, 521, 694, 867, 1040, 1211, 1383, 1553, 1723, 1891, 2059, 2226, 2391, 2555, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE},
  {0, 171, 342, 513, 683, 853, 1023, 1192, 1360, 1528, 1695, 1861, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE},
  {0, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE, ROT_NONE}
};

#endif

